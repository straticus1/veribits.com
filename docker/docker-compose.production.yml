version: '3.8'

services:
  app:
    build: .
    image: veribits/api:latest
    container_name: veribits-api
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    volumes:
      - ./app:/var/www/html
      - ./logs:/var/www/logs
      - clamav_data:/var/lib/clamav
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - redis
      - clamav
    networks:
      - veribits-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    image: veribits/frontend:latest
    container_name: veribits-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.veribits.com
    ports:
      - "3000:3000"
    networks:
      - veribits-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: veribits-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-default_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - veribits-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  clamav:
    image: clamav/clamav:latest
    container_name: veribits-clamav
    restart: unless-stopped
    volumes:
      - clamav_data:/var/lib/clamav
    networks:
      - veribits-network
    healthcheck:
      test: ["CMD", "clamdscan", "--ping", "1"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 300s

  nginx:
    image: nginx:alpine
    container_name: veribits-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-available:/etc/nginx/sites-available:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - app
      - frontend
    networks:
      - veribits-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  webhook-worker:
    build: .
    image: veribits/api:latest
    container_name: veribits-webhook-worker
    restart: unless-stopped
    command: php /var/www/scripts/webhook-worker.php
    environment:
      - APP_ENV=production
      - WORKER_TYPE=webhook
    volumes:
      - ./app:/var/www/html
      - ./logs:/var/www/logs
    depends_on:
      - redis
      - app
    networks:
      - veribits-network

  monitoring:
    image: prom/prometheus:latest
    container_name: veribits-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - veribits-network

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  clamav_data:
    driver: local

networks:
  veribits-network:
    driver: bridge